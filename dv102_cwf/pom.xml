<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>sddvops</groupId>
  <artifactId>dv102_cwf</artifactId>
  <packaging>jar</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>Maven Quick Start Archetype</name>
  <url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!-- JaCoCo properties -->
		<!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
		<jacoco.groupId>org.jacoco</jacoco.groupId>
		<jacoco.artifactId>jacoco-maven-plugin</jacoco.artifactId>
		<jacoco.version>0.8.7</jacoco.version>
		<sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
		<!-- SonarQube properties -->
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.language>java</sonar.language>
		
		<junit-jupiter.groupId>org.junit.jupiter</junit-jupiter.groupId>
		<junit-jupiter.artifactId>junit-jupiter</junit-jupiter.artifactId>
		<junit-jupiter.version>5.7.0</junit-jupiter.version>
	</properties>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter -->
		<dependency>
			<groupId>${junit-jupiter.groupId}</groupId>
			<artifactId>${junit-jupiter.artifactId}</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.6</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<!-- SonarSource provides a maven plugin to help scan and analyze our code, including coverage. 
				Note: This plugin requires JDK11. -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent -->
					<execution>
						<!-- 1 -->
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created
            			 after unit tests have been run. -->
					<execution>
						<!-- 2 -->
						<!-- report — As mentioned above this phase generates the report in XML and HTML formats. 
						This phase requires the jacoco.exec file which was generated in the prepare-agent phase. 
						There are various optional parameters that can be provided in this phase which can be found here.
						-->
						<id>jacoco-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<!-- 3 -->
						<!-- check — This is another goal that is optional. It can be used to 
						fail maven builds in case some provided rules fail. 
						-->
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
			<!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
		
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
        	<source>1.8</source>
        	<target>1.8</target>
        </configuration>
      </plugin>
      
			
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
			</plugin>
			<!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
		</plugins>
	</build>
</project>
